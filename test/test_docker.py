import os
import json

def test_docker_files():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_files = [
        'Dockerfile',
        'docker-compose.yml',
        'requirements.txt',
        '.dockerignore',
        'DOCKER.md'
    ]
    
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Ñ–∞–π–ª–æ–≤:")
    for filename in required_files:
        if os.path.exists(filename):
            print(f"   ‚úÖ {filename}")
        else:
            print(f"   ‚ùå {filename} - –ù–ï –ù–ê–ô–î–ï–ù!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ requirements.txt
    print(f"\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ requirements.txt:")
    try:
        with open('requirements.txt', 'r') as f:
            requirements = f.read().strip().split('\n')
        print(f"   ‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   üì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        for req in requirements:
            if req.strip():
                print(f"      - {req}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º docker-compose.yml
    print(f"\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.yml:")
    try:
        with open('docker-compose.yml', 'r') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        checks = [
            ('version', 'version:'),
            ('service', 'web-prompts:'),
            ('ports', 'ports:'),
            ('volumes', 'volumes:'),
            ('environment', 'environment:')
        ]
        
        for check_name, check_value in checks:
            if check_value in content:
                print(f"   ‚úÖ {check_name}")
            else:
                print(f"   ‚ùå {check_name} - –ù–ï –ù–ê–ô–î–ï–ù!")
                
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Dockerfile
    print(f"\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile:")
    try:
        with open('Dockerfile', 'r') as f:
            content = f.read()
        
        checks = [
            ('FROM', 'FROM python:'),
            ('WORKDIR', 'WORKDIR /app'),
            ('COPY', 'COPY requirements.txt'),
            ('EXPOSE', 'EXPOSE 5045'),
            ('CMD', 'CMD [')
        ]
        
        for check_name, check_value in checks:
            if check_value in content:
                print(f"   ‚úÖ {check_name}")
            else:
                print(f"   ‚ùå {check_name} - –ù–ï –ù–ê–ô–î–ï–ù!")
                
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
    
    print(f"\nüéâ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞!")
    print(f"   –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: docker-compose up --build")

if __name__ == '__main__':
    test_docker_files()