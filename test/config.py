import json
import os

def test_config_files():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    
    config_dir = 'config'
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
    required_files = [
        'technologies.json',
        'frameworks.json', 
        'prompt_rules.json',
        'prompts.json'
    ]
    
    print(f"\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ {config_dir}:")
    for filename in required_files:
        filepath = os.path.join(config_dir, filename)
        if os.path.exists(filepath):
            print(f"   ‚úÖ {filename}")
        else:
            print(f"   ‚ùå {filename} - –ù–ï –ù–ê–ô–î–ï–ù!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É prompts.json
    print(f"\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã prompts.json:")
    try:
        with open(os.path.join(config_dir, 'prompts.json'), 'r', encoding='utf-8') as f:
            prompts = json.load(f)
        
        print(f"   ‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π: {len(prompts)}")
        
        for tech, tech_prompts in prompts.items():
            print(f"      {tech}: {len(tech_prompts)} –ø—Ä–æ–º–ø—Ç–æ–≤")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ ID
    print(f"\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è ID:")
    try:
        with open(os.path.join(config_dir, 'technologies.json'), 'r', encoding='utf-8') as f:
            techs = json.load(f)
        
        with open(os.path.join(config_dir, 'frameworks.json'), 'r', encoding='utf-8') as f:
            frameworks = json.load(f)
        
        with open(os.path.join(config_dir, 'prompts.json'), 'r', encoding='utf-8') as f:
            prompts = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏–∑ prompts.json –µ—Å—Ç—å –≤ technologies.json
        for tech_id in prompts.keys():
            tech_exists = any(t['id'] == tech_id for t in techs)
            if tech_exists:
                print(f"   ‚úÖ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è '{tech_id}' –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print(f"   ‚ùå –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è '{tech_id}' –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ technologies.json")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏
        for tech_id, tech_prompts in prompts.items():
            for fw_id in tech_prompts.keys():
                fw_exists = any(f['id'] == fw_id for f in frameworks.get(tech_id, []))
                if fw_exists:
                    print(f"   ‚úÖ –§—Ä–µ–π–º–≤–æ—Ä–∫ '{fw_id}' –¥–ª—è '{tech_id}' –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"   ‚ùå –§—Ä–µ–π–º–≤–æ—Ä–∫ '{fw_id}' –¥–ª—è '{tech_id}' –ù–ï –Ω–∞–π–¥–µ–Ω –≤ frameworks.json")
                    
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")

if __name__ == '__main__':
    test_config_files() 